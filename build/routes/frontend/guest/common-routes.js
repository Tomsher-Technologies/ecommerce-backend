"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const common_controller_1 = __importDefault(require("../../../src/controllers/frontend/guest/common-controller"));
const checkout_controller_1 = __importDefault(require("../../../src/controllers/frontend/auth/checkout-controller"));
const router = express_1.default.Router();
router.get('/countries', common_controller_1.default.findAllCountries);
router.get('/slider', common_controller_1.default.findAllSliders);
router.get('/banner', common_controller_1.default.findAllBanners);
router.get('/website-setups', common_controller_1.default.findWebsiteSetups);
router.get('/priority-product', common_controller_1.default.findPriorityProducts);
router.get('/collection-products', common_controller_1.default.findCollectionProducts);
router.get('/collection-categories', common_controller_1.default.findCollectionCategories);
router.get('/collection-brands', common_controller_1.default.findCollectionBrands);
router.get('/payment-methods', common_controller_1.default.findPaymentMethods);
router.get('/stores', common_controller_1.default.findAllStores);
router.get('/tap-success-response', checkout_controller_1.default.tapSuccessResponse);
router.get('/tap-failure-response', checkout_controller_1.default.tapSuccessResponse);
router.get('/tabby-success-response', checkout_controller_1.default.tabbySuccessResponse);
router.get('/tabby-failure-response', checkout_controller_1.default.tabbySuccessResponse);
router.get('/network-payment-response', checkout_controller_1.default.tabbySuccessResponse);
exports.default = router;
